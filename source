/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lmsdistribution;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 *
 * @author mnasim.bscs14seecs
 */
public class LMSdistribution {
         LinkedList head=null;
         LinkedList tail=null;
    
    public void Readcsv()
    {
        String csvFile = "Academic _Schedule.csv";
         BufferedReader br = null;
        String line = "";
        String cvsSplitBy = "[,(-]"; 
        try {
            br = new BufferedReader(new FileReader(csvFile));
            while ((line = br.readLine()) != null) {
                LinkedList newnode=new LinkedList();
                String [] slot = new String[5];
                for(int i=0;i<5;i++)
                {
                 slot[i]=" ";   
                }
                slot=line.split(cvsSplitBy);
                        newnode.startdate=slot[0];
                    if(!" ".equals(slot[1]))
                        newnode.enddate=slot[1];
                    if(!" ".equals(slot[2]))
                        newnode.activity=slot[2];
                    if(!" ".equals(slot[3]))
                        newnode.starttime=slot[3];
                    if(!" ".equals(slot[4]))
                        newnode.enddate=slot[4];
                if(head==null &&tail==null)
                {
                    
                    head=newnode;
                    tail=newnode;
                    head.next=null;
                    tail.next=null;
                }
                else
                {
                   
                    if(slot[0]!=null&&search(slot[2]))
                        newnode.startdate=slot[0];
                    if(slot[1]!=null && search(slot[2]))
                        newnode.enddate=slot[1];
                    if(slot[2]!=null&& search(slot[2]))
                        newnode.activity=slot[2];
                    if(slot[3]!=null&& search(slot[2]))
                        newnode.starttime=slot[3];
                    if(slot[4]!=null&& search(slot[2]))
                        newnode.enddate=slot[4];
                    LinkedList ptr;
                    ptr=head;
                    while (ptr.next!=null)
                    {
                        ptr=ptr.next;
                    }
                    if(ptr.next==null)
                    {
                        ptr.next=newnode;
                        tail=newnode;
                        newnode.next=null;
                    }
                }

            }

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (br != null) {
                try {
                    br.close();
                } 
                catch (IOException e) {
                    e.printStackTrace();
                }
            }
                
            
            }

    
               
    }
    public boolean search(String a)
        {
            LinkedList ptr;
            if (head==null)
                return false;
            else 
            {
                ptr=head;
                while(ptr!=null&&ptr.activity!=a)
                {
                    ptr=ptr.next;
                }
                if(ptr==null)
                    return false;
            }
            return true;
        }
    void print()
    {
        LinkedList ptr;
        ptr=head;
        while(ptr!=null)
        {
            System.out.println(ptr.activity);
        }
    }
    
    public static void main(String[] args) {
        LMSdistribution linkedlist=new LMSdistribution();
        linkedlist.Readcsv();
        linkedlist.print();
    }
    
}
